/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package almacen.cacao;

import java.io.BufferedWriter;
import java.io.FileWriter;
import javax.swing.JOptionPane;

/**
 *
 * @author Andres
 */
public class RegistroUsuario extends javax.swing.JFrame {
    public String archivoRemoto = "src/Base de Datos txt/Registro Usuario.txt";
    /**
     * Creates new form RegistroUsuario
     */
    public RegistroUsuario() {
        initComponents();
        this.setTitle("Registrarse");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//        EstadoBoton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsuarioRegistar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtContrasenaRegistrar = new javax.swing.JPasswordField();
        rbtMostrarContrasena = new javax.swing.JRadioButton();
        btnRegistrar = new javax.swing.JButton();
        btnInicioAbrir = new javax.swing.JButton();

        jLabel2.setText("Nombre de Usuario");

        jLabel3.setText("Contraseña");

        jPasswordField1.setText("jPasswordField1");

        jRadioButton1.setText("Mostrar Contraseña");

        jButton1.setText("Registrarse");

        jButton2.setText("Inicio de Seccion");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Engravers MT", 0, 45)); // NOI18N
        jLabel1.setText("Registrate");

        jLabel4.setText("Nombre de Usuario");

        jLabel5.setText("Contraseña");

        rbtMostrarContrasena.setText("Mostrar Contraseña");
        rbtMostrarContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMostrarContrasenaActionPerformed(evt);
            }
        });

        btnRegistrar.setText("Registrarse");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnInicioAbrir.setText("Iniciar Sesion");
        btnInicioAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioAbrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtUsuarioRegistar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRegistrar)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnInicioAbrir))
                                    .addComponent(txtContrasenaRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(35, 35, 35)
                        .addComponent(rbtMostrarContrasena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(62, 62, 62)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUsuarioRegistar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtContrasenaRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtMostrarContrasena))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnInicioAbrir))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        metodoValidador();
//GuardarUsuario();
        
//        if (txtUsuarioRegistar.getText().isEmpty()&&txtContrasenaRegistrar.getPassword().isEmpty()) {
//          btnRegistrar.setEnabled(false);
//        } else {
//          GuardarUsuario();    
//        }
//String usuario = txtUsuarioRegistar.getText();
//    char[] contrasenaChars = txtContrasenaRegistrar.getPassword();
//        if (!btnRegistrar.isSelected()) {
//           if (usuario.isEmpty() && contrasenaChars.length == 0) {
//        btnRegistrar.setEnabled(false);
//    }  
//        }
//    else {
//        // Aquí deberías llamar a tu método para guardar el usuario
//        GuardarUsuario();    
//    }
//        String usuario = txtUsuarioRegistar.getText();
//        char[] contrasenaChars = txtContrasenaRegistrar.getPassword();
//        String contrasena = new String(contrasenaChars);
//
//        if (!btnRegistrar.isSelected()) {
//            if (usuario.isEmpty() || contrasena.isEmpty()) {
//
//                btnRegistrar.setEnabled(false);
//            }
//        } else {
//            btnRegistrar.setEnabled(true);
//
//            GuardarUsuario();
//        }
//String usuario = txtUsuarioRegistar.getText();
//    char[] contrasenaChars = txtContrasenaRegistrar.getPassword();
//    String contrasena = new String(contrasenaChars);
//    if (usuario.isEmpty() && contrasena.isEmpty()) {
//        btnRegistrar.setEnabled(false);       
//    } else {
//        btnRegistrar.setEnabled(true);
//         GuardarUsuario();
//    }

//String usuario = txtUsuarioRegistar.getText();
//    char[] contrasenaChars = txtContrasenaRegistrar.getPassword();
//    String contrasena = new String(contrasenaChars);
//     if (usuario.isEmpty() && contrasena.isEmpty()) {
//        btnRegistrar.setEnabled(true); 
//           GuardarUsuario();
//    } else {
//        btnRegistrar.setEnabled(false);
//      
//    }

    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void rbtMostrarContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMostrarContrasenaActionPerformed
        if (rbtMostrarContrasena.isSelected()) {
                    txtContrasenaRegistrar.setEchoChar((char) 0); // Muestra la contraseña
                } else {
                    txtContrasenaRegistrar.setEchoChar('*'); // Oculta la contraseña
                }
    }//GEN-LAST:event_rbtMostrarContrasenaActionPerformed

    private void btnInicioAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioAbrirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInicioAbrirActionPerformed
private void GuardarUsuario(){

    try(BufferedWriter escribirUsuaario= new BufferedWriter(new FileWriter(archivoRemoto, true))) {
        String separador = String.join(",",
           txtUsuarioRegistar.getText(),
          String.valueOf(txtContrasenaRegistrar.getPassword())
        );
        escribirUsuaario.write(separador);
        escribirUsuaario.newLine();
        JOptionPane.showMessageDialog(null, "Se Guardo su Registo, Puede ir a Inicio de Sesion");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "No se Guardo, vuelva a intentarlo");
    }
    //    String archivoRemoto = "src/Base de Datos txt/Registro Usuario.txt";
//    try {
//        FileFileWriter archivoEscrito = new FileWriter(archivoRemoto, true);
//        BufferedWriter escribirUsuaario= new BufferedWriter(archivoEscrito);
//        String separador = String.join(",",
//           txtUsuarioRegistar.getText(),
//           txtContrasenaRegistrar.getName()
//        );
//        escribirUsuaario.write(separador);
//        escribirUsuaario.newLine();
//    } catch (Exception e) {
//        e.printStackTrace();
//    }

//String archivoRemoto = "src/Base de Datos txt/Registro Usuario.txt";

//    try (BufferedWriter escribirUsuario = new BufferedWriter(new FileWriter(archivoRemoto, true))) {
//        // Suponiendo que txtUsuarioRegistar y txtContrasenaRegistrar son listas o arrays
//        for (int i = 0; i < txtUsuarioRegistar.length; i++) {
//            // Crear una cadena con los campos a separar
//            String cadena = txtUsuarioRegistar[i].getText() + "," + txtContrasenaRegistrar[i].getText();
//
//            // Usar .split para dividir la cadena en un arreglo
//            String[] campos = cadena.split(",");
//
//            // Reconstruir la cadena separada por comas para escritura
//            String separador = campos[0] + "," + campos[1];
//
//            escribirUsuario.write(separador);
//            escribirUsuario.newLine();
//        }
//    } catch (Exception e) {
//        e.printStackTrace();
//    }

//String archivoRemoto = "src/Base de Datos txt/Registro Usuario.txt";
//
//    try (BufferedWriter escribirUsuario = new BufferedWriter(new FileWriter(archivoRemoto, true))) {
//        // Suponiendo que txtUsuarioRegistar y txtContrasenaRegistrar son listas o arrays
//        for (int i = 0; i < txtUsuarioRegistar.length; i++) {
//            // Crear un arreglo con los campos a separar
//            String[] campos = new String[2];
//            campos[0] = txtUsuarioRegistar[i].getText();
//            campos[1] = txtContrasenaRegistrar[i].getText();
//
//            // Construir manualmente la cadena separada por comas sin usar StringBuilder
//            String separador = "";
//            for (int j = 0; j < campos.length; j++) {
//                separador += campos[j];
//                if (j < campos.length - 1) {
//                    separador += ",";
//                }
//            }
//
//            escribirUsuario.write(separador);
//            escribirUsuario.newLine();
//        }
//    } catch (Exception e) {
//        e.printStackTrace();
//    }

//String archivoRemoto = "src/Base de Datos txt/Registro Usuario.txt";
//        
//         try (BufferedWriter escribirUsuario = new BufferedWriter(new FileWriter(archivoRemoto, true))) {
//            for (int i = 0; i < txtUsuarioRegistar.length; i++) {
//                // Verificar si el JTextField y JPasswordField están inicializados y no son nulos
//                if (txtUsuarioRegistar[i] != null && txtContrasenaRegistrar[i] != null) {
//                    // Obtener los valores del JTextField y JPasswordField
//                    String usuario = txtUsuarioRegistar[i].getText();
//                    String contrasena = new String(txtContrasenaRegistrar[i].getPassword());
//
//                    // Construir la cadena separada por comas
//                    String separador = usuario + "," + contrasena;
//
//                    escribirUsuario.write(separador);
//                    escribirUsuario.newLine();
//                }
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

}

//private void EstadoBoton(){
//    
//    String usuario = txtUsuarioRegistar.getText();
//        char[] contrasenaChars = txtContrasenaRegistrar.getPassword();
//        btnRegistrar.setEnabled(!usuario.isEmpty() && contrasenaChars.length > 0);
////String usuario = txtUsuarioRegistar.getText();
////    char[] contrasenaChars = txtContrasenaRegistrar.getPassword();
////           if (usuario.isEmpty() && contrasenaChars.length == 0) {
////        btnRegistrar.setEnabled(false); 
////        }
////       if (!usuario.isEmpty() && contrasenaChars.length == 0) {
////        btnRegistrar.setEnabled(true); 
////    }
//    
////    char[] contrasenaChars = txtContrasenaRegistrar.getPassword();
////        if (!btnRegistrar.isSelected()) {
////           if (usuario.isEmpty() && contrasenaChars.length == 0) {
////        btnRegistrar.setEnabled(false);
////    }  
////        }
////    else {
////        // Aquí deberías llamar a tu método para guardar el usuario
////        GuardarUsuario();    
////    }
//        
//    
//}

private void metodoValidador(){
    String usuario = txtUsuarioRegistar.getText();
    char[] contrasenaArray = txtContrasenaRegistrar.getPassword();
    String contrasena = new String(contrasenaArray);
    if (!usuario.isEmpty() && !contrasena.isEmpty()) {
        GuardarUsuario();
    } else {
        JOptionPane.showMessageDialog(null, "El registro no se ha podido completar. por favor llene los campos");
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInicioAbrir;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton rbtMostrarContrasena;
    private javax.swing.JPasswordField txtContrasenaRegistrar;
    private javax.swing.JTextField txtUsuarioRegistar;
    // End of variables declaration//GEN-END:variables
}
